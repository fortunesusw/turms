// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: request/message/query_messages_request.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct QueryMessagesRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var ids: [Int64] {
    get {return _storage._ids}
    set {_uniqueStorage()._ids = newValue}
  }

  public var size: SwiftProtobuf.Google_Protobuf_Int32Value {
    get {return _storage._size ?? SwiftProtobuf.Google_Protobuf_Int32Value()}
    set {_uniqueStorage()._size = newValue}
  }
  /// Returns true if `size` has been explicitly set.
  public var hasSize: Bool {return _storage._size != nil}
  /// Clears the value of `size`. Subsequent reads from it will return its default value.
  public mutating func clearSize() {_uniqueStorage()._size = nil}

  public var chatType: ChatType {
    get {return _storage._chatType}
    set {_uniqueStorage()._chatType = newValue}
  }

  public var areSystemMessages: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._areSystemMessages ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._areSystemMessages = newValue}
  }
  /// Returns true if `areSystemMessages` has been explicitly set.
  public var hasAreSystemMessages: Bool {return _storage._areSystemMessages != nil}
  /// Clears the value of `areSystemMessages`. Subsequent reads from it will return its default value.
  public mutating func clearAreSystemMessages() {_uniqueStorage()._areSystemMessages = nil}

  public var fromID: SwiftProtobuf.Google_Protobuf_Int64Value {
    get {return _storage._fromID ?? SwiftProtobuf.Google_Protobuf_Int64Value()}
    set {_uniqueStorage()._fromID = newValue}
  }
  /// Returns true if `fromID` has been explicitly set.
  public var hasFromID: Bool {return _storage._fromID != nil}
  /// Clears the value of `fromID`. Subsequent reads from it will return its default value.
  public mutating func clearFromID() {_uniqueStorage()._fromID = nil}

  public var deliveryDateAfter: SwiftProtobuf.Google_Protobuf_Int64Value {
    get {return _storage._deliveryDateAfter ?? SwiftProtobuf.Google_Protobuf_Int64Value()}
    set {_uniqueStorage()._deliveryDateAfter = newValue}
  }
  /// Returns true if `deliveryDateAfter` has been explicitly set.
  public var hasDeliveryDateAfter: Bool {return _storage._deliveryDateAfter != nil}
  /// Clears the value of `deliveryDateAfter`. Subsequent reads from it will return its default value.
  public mutating func clearDeliveryDateAfter() {_uniqueStorage()._deliveryDateAfter = nil}

  public var deliveryDateBefore: SwiftProtobuf.Google_Protobuf_Int64Value {
    get {return _storage._deliveryDateBefore ?? SwiftProtobuf.Google_Protobuf_Int64Value()}
    set {_uniqueStorage()._deliveryDateBefore = newValue}
  }
  /// Returns true if `deliveryDateBefore` has been explicitly set.
  public var hasDeliveryDateBefore: Bool {return _storage._deliveryDateBefore != nil}
  /// Clears the value of `deliveryDateBefore`. Subsequent reads from it will return its default value.
  public mutating func clearDeliveryDateBefore() {_uniqueStorage()._deliveryDateBefore = nil}

  public var deliveryStatus: MessageDeliveryStatus {
    get {return _storage._deliveryStatus}
    set {_uniqueStorage()._deliveryStatus = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "im.turms.proto"

extension QueryMessagesRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".QueryMessagesRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "ids"),
    2: .same(proto: "size"),
    3: .standard(proto: "chat_type"),
    4: .standard(proto: "are_system_messages"),
    5: .standard(proto: "from_id"),
    6: .standard(proto: "delivery_date_after"),
    7: .standard(proto: "delivery_date_before"),
    8: .standard(proto: "delivery_status"),
  ]

  fileprivate class _StorageClass {
    var _ids: [Int64] = []
    var _size: SwiftProtobuf.Google_Protobuf_Int32Value? = nil
    var _chatType: ChatType = .private
    var _areSystemMessages: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _fromID: SwiftProtobuf.Google_Protobuf_Int64Value? = nil
    var _deliveryDateAfter: SwiftProtobuf.Google_Protobuf_Int64Value? = nil
    var _deliveryDateBefore: SwiftProtobuf.Google_Protobuf_Int64Value? = nil
    var _deliveryStatus: MessageDeliveryStatus = .ready

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _ids = source._ids
      _size = source._size
      _chatType = source._chatType
      _areSystemMessages = source._areSystemMessages
      _fromID = source._fromID
      _deliveryDateAfter = source._deliveryDateAfter
      _deliveryDateBefore = source._deliveryDateBefore
      _deliveryStatus = source._deliveryStatus
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedInt64Field(value: &_storage._ids)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._size)
        case 3: try decoder.decodeSingularEnumField(value: &_storage._chatType)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._areSystemMessages)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._fromID)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._deliveryDateAfter)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._deliveryDateBefore)
        case 8: try decoder.decodeSingularEnumField(value: &_storage._deliveryStatus)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._ids.isEmpty {
        try visitor.visitPackedInt64Field(value: _storage._ids, fieldNumber: 1)
      }
      if let v = _storage._size {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if _storage._chatType != .private {
        try visitor.visitSingularEnumField(value: _storage._chatType, fieldNumber: 3)
      }
      if let v = _storage._areSystemMessages {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._fromID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._deliveryDateAfter {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._deliveryDateBefore {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if _storage._deliveryStatus != .ready {
        try visitor.visitSingularEnumField(value: _storage._deliveryStatus, fieldNumber: 8)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: QueryMessagesRequest, rhs: QueryMessagesRequest) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._ids != rhs_storage._ids {return false}
        if _storage._size != rhs_storage._size {return false}
        if _storage._chatType != rhs_storage._chatType {return false}
        if _storage._areSystemMessages != rhs_storage._areSystemMessages {return false}
        if _storage._fromID != rhs_storage._fromID {return false}
        if _storage._deliveryDateAfter != rhs_storage._deliveryDateAfter {return false}
        if _storage._deliveryDateBefore != rhs_storage._deliveryDateBefore {return false}
        if _storage._deliveryStatus != rhs_storage._deliveryStatus {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
