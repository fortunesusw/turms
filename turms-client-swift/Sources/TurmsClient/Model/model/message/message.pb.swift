// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: model/message/message.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct Message {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var id: SwiftProtobuf.Google_Protobuf_Int64Value {
    get {return _storage._id ?? SwiftProtobuf.Google_Protobuf_Int64Value()}
    set {_uniqueStorage()._id = newValue}
  }
  /// Returns true if `id` has been explicitly set.
  public var hasID: Bool {return _storage._id != nil}
  /// Clears the value of `id`. Subsequent reads from it will return its default value.
  public mutating func clearID() {_uniqueStorage()._id = nil}

  public var deliveryDate: SwiftProtobuf.Google_Protobuf_Int64Value {
    get {return _storage._deliveryDate ?? SwiftProtobuf.Google_Protobuf_Int64Value()}
    set {_uniqueStorage()._deliveryDate = newValue}
  }
  /// Returns true if `deliveryDate` has been explicitly set.
  public var hasDeliveryDate: Bool {return _storage._deliveryDate != nil}
  /// Clears the value of `deliveryDate`. Subsequent reads from it will return its default value.
  public mutating func clearDeliveryDate() {_uniqueStorage()._deliveryDate = nil}

  public var deletionDate: SwiftProtobuf.Google_Protobuf_Int64Value {
    get {return _storage._deletionDate ?? SwiftProtobuf.Google_Protobuf_Int64Value()}
    set {_uniqueStorage()._deletionDate = newValue}
  }
  /// Returns true if `deletionDate` has been explicitly set.
  public var hasDeletionDate: Bool {return _storage._deletionDate != nil}
  /// Clears the value of `deletionDate`. Subsequent reads from it will return its default value.
  public mutating func clearDeletionDate() {_uniqueStorage()._deletionDate = nil}

  public var text: SwiftProtobuf.Google_Protobuf_StringValue {
    get {return _storage._text ?? SwiftProtobuf.Google_Protobuf_StringValue()}
    set {_uniqueStorage()._text = newValue}
  }
  /// Returns true if `text` has been explicitly set.
  public var hasText: Bool {return _storage._text != nil}
  /// Clears the value of `text`. Subsequent reads from it will return its default value.
  public mutating func clearText() {_uniqueStorage()._text = nil}

  public var senderID: SwiftProtobuf.Google_Protobuf_Int64Value {
    get {return _storage._senderID ?? SwiftProtobuf.Google_Protobuf_Int64Value()}
    set {_uniqueStorage()._senderID = newValue}
  }
  /// Returns true if `senderID` has been explicitly set.
  public var hasSenderID: Bool {return _storage._senderID != nil}
  /// Clears the value of `senderID`. Subsequent reads from it will return its default value.
  public mutating func clearSenderID() {_uniqueStorage()._senderID = nil}

  public var groupID: SwiftProtobuf.Google_Protobuf_Int64Value {
    get {return _storage._groupID ?? SwiftProtobuf.Google_Protobuf_Int64Value()}
    set {_uniqueStorage()._groupID = newValue}
  }
  /// Returns true if `groupID` has been explicitly set.
  public var hasGroupID: Bool {return _storage._groupID != nil}
  /// Clears the value of `groupID`. Subsequent reads from it will return its default value.
  public mutating func clearGroupID() {_uniqueStorage()._groupID = nil}

  public var isSystemMessage: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._isSystemMessage ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._isSystemMessage = newValue}
  }
  /// Returns true if `isSystemMessage` has been explicitly set.
  public var hasIsSystemMessage: Bool {return _storage._isSystemMessage != nil}
  /// Clears the value of `isSystemMessage`. Subsequent reads from it will return its default value.
  public mutating func clearIsSystemMessage() {_uniqueStorage()._isSystemMessage = nil}

  public var recipientID: SwiftProtobuf.Google_Protobuf_Int64Value {
    get {return _storage._recipientID ?? SwiftProtobuf.Google_Protobuf_Int64Value()}
    set {_uniqueStorage()._recipientID = newValue}
  }
  /// Returns true if `recipientID` has been explicitly set.
  public var hasRecipientID: Bool {return _storage._recipientID != nil}
  /// Clears the value of `recipientID`. Subsequent reads from it will return its default value.
  public mutating func clearRecipientID() {_uniqueStorage()._recipientID = nil}

  public var records: [SwiftProtobuf.Google_Protobuf_BytesValue] {
    get {return _storage._records}
    set {_uniqueStorage()._records = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "im.turms.proto"

extension Message: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Message"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .standard(proto: "delivery_date"),
    3: .standard(proto: "deletion_date"),
    4: .same(proto: "text"),
    5: .standard(proto: "sender_id"),
    6: .standard(proto: "group_id"),
    7: .standard(proto: "is_system_message"),
    8: .standard(proto: "recipient_id"),
    9: .same(proto: "records"),
  ]

  fileprivate class _StorageClass {
    var _id: SwiftProtobuf.Google_Protobuf_Int64Value? = nil
    var _deliveryDate: SwiftProtobuf.Google_Protobuf_Int64Value? = nil
    var _deletionDate: SwiftProtobuf.Google_Protobuf_Int64Value? = nil
    var _text: SwiftProtobuf.Google_Protobuf_StringValue? = nil
    var _senderID: SwiftProtobuf.Google_Protobuf_Int64Value? = nil
    var _groupID: SwiftProtobuf.Google_Protobuf_Int64Value? = nil
    var _isSystemMessage: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _recipientID: SwiftProtobuf.Google_Protobuf_Int64Value? = nil
    var _records: [SwiftProtobuf.Google_Protobuf_BytesValue] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _id = source._id
      _deliveryDate = source._deliveryDate
      _deletionDate = source._deletionDate
      _text = source._text
      _senderID = source._senderID
      _groupID = source._groupID
      _isSystemMessage = source._isSystemMessage
      _recipientID = source._recipientID
      _records = source._records
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._id)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._deliveryDate)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._deletionDate)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._text)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._senderID)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._groupID)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._isSystemMessage)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._recipientID)
        case 9: try decoder.decodeRepeatedMessageField(value: &_storage._records)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._id {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._deliveryDate {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._deletionDate {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._text {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._senderID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._groupID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._isSystemMessage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._recipientID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if !_storage._records.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._records, fieldNumber: 9)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Message, rhs: Message) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._id != rhs_storage._id {return false}
        if _storage._deliveryDate != rhs_storage._deliveryDate {return false}
        if _storage._deletionDate != rhs_storage._deletionDate {return false}
        if _storage._text != rhs_storage._text {return false}
        if _storage._senderID != rhs_storage._senderID {return false}
        if _storage._groupID != rhs_storage._groupID {return false}
        if _storage._isSystemMessage != rhs_storage._isSystemMessage {return false}
        if _storage._recipientID != rhs_storage._recipientID {return false}
        if _storage._records != rhs_storage._records {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
